<%
    function roundNumber(value, power10, fixed) {
        return (Math.round(parseFloat(value || 0) * (Math.pow(10, power10))) / (Math.pow(10, power10))).toFixed(fixed)
    }
    function getNumberWithOrdinal(n) {
        var s = ["th", "st", "nd", "rd"];
        v = n % 100;
        return n + (s[(v - 20) % 10] || s[v] || s[0]);
    }
    const CLEAN_LIST = [61];
    function cleanLocation() {
        if (CLEAN_LIST.includes(parseInt(teamData.id))) {
            return teamData.location.toLocaleLowerCase()
        }
        return teamData.location
    }    
%>
<style>
.img-circle-bg {
    background: rgba(0, 0, 0, 0.1);
    width: 150px;
    -webkit-clip-path: circle(closest-side);
    clip-path: circle(closest-side);
}

@media (prefers-color-scheme: dark) {
    .img-circle-bg {
        background: rgba(255, 255, 255, 0.1) !important;
    }
}

</style>
<div class="card border rounded">
    <div class="card-body">
        <div class="card-title mb-0">
            <div class="d-flex align-items-center justify-content-between">
                <h2><%= season %> <%= cleanLocation() %> Leaders</h2>
                <img class="h2 img img-fluid me-1 team-logo-<%= teamData.id %>" width="50px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= teamData.id %>.png" /> 
            </div>
        </div>
        <div class="row">
            <%
            const CONST_PLAYER = {
                id: 4432734,
                name: 'J. Monroe',
                statline: 'test test test test test'
            }
            const types = ['passing', 'rushing', 'receiving'];
            %>
            <% types.forEach(t => { %>
            <div class="col-lg-4">
                <div class="text-center">
                    <% 
                    let positional = players[t].filter(item => item.name != null).filter(item => item.name.length > 0).slice();
                    positional.sort((a, b) => {
                        let aVal = a.statistics.plays
                        let bVal = b.statistics.plays
                        return parseInt(bVal) - parseInt(aVal)
                    }); 

                    let p = positional[0];

                    %>
                    <p class="box-heading"><%= t.charAt(0).toUpperCase() + t.slice(1) %></p>
                    <% if (p.playerId && p.playerId != 'NA') { %>
                        <a href="https://www.espn.com/college-football/player/_/id/<%= p.playerId %>"><img class="img img-fluid img-circle-bg mb-3" src="https://a.espncdn.com/combiner/i?img=/i/headshots/college-football/players/full/<%= p.playerId %>.png&w=150" /></a>
                    <% } else { %>
                        <img class="img img-fluid img-circle-bg mb-3" src="https://a.espncdn.com/combiner/i?img=/i/headshots/nophoto.png&w=150&scale=crop" />
                    <% } %>
                    <h5><%= p.name %></h5>

                    <% if (t === 'passing') { %>
                        <p><%= roundNumber(parseFloat(p['advanced']['epaPerPlay']), 2, 2) %> EPA/Play, <%= roundNumber(100 * parseFloat(p['statistics']['completionPct']), 2, 0) %>% Comp%, <%= p['statistics']['yards'] %> yd<%= (Math.abs(parseFloat(p['statistics']['yards'])) == 1) ? "" : "s" %>, <%= p['statistics']['touchdowns'] %> TD, <%= roundNumber(parseFloat(p['statistics']['detmer']), 2, 2) %> DETMER</p>
                    <% } else if (t === 'rushing') { %>
                        <p><%= roundNumber(parseFloat(p['advanced']['epaPerPlay']), 2, 2) %> EPA/Play, <%= p['statistics']['plays'] %> Car, <%= p['statistics']['yards'] %> yd<%= (Math.abs(parseFloat(p['statistics']['yards'])) == 1) ? "" : "s" %>,  <%= p['statistics']['touchdowns'] %> TD </p>
                    <% } else if (t === 'receiving') { %>
                        <p><%= roundNumber(parseFloat(p['advanced']['epaPerPlay']), 2, 2) %> EPA/Play, <%= p['statistics']['catches'] %> Cat (<%= roundNumber(100 * parseFloat(p['statistics']['catchPct']), 2, 0) %>% Catch%), <%= p['statistics']['yards'] %> yd<%= (Math.abs(parseFloat(p['statistics']['yards'])) == 1) ? "" : "s" %>,  <%= p['statistics']['touchdowns'] %> TD </p>
                    <% } else { %>
                        <p><%= CONST_PLAYER.statline %></p>
                    <% } %>
                </div>
            </div>
            <% }); %>
        </div>
    </div>
</div>