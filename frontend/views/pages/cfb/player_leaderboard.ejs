<!DOCTYPE html>
<html>
<%

function generateMarginalString(input, power10, fixed) {
    if (input >= 0 && type == "differential") {
        return `+${roundNumber(input, power10, fixed)}`;
    } else {
        return roundNumber(input, power10, fixed);
    }
}

function generateColorRampValue(input, max) {
    if (!input) {
        return null;
    }
    let value = (parseFloat(max) - parseFloat(input)) / parseFloat(max)
    let step = Math.round(value / 0.1)
    let clampedStep = Math.min(Math.max(step, 0), 9)

    let hex = null
    if (clampedStep == 4 || clampedStep == 5) {
        return null
    } else {
        return `hulk-bg-level-${clampedStep}`
    }
}

function retrieveValue(dictionary, key) {
    const subKeys = key.split('.')
    let sub = dictionary;
    for (const k of subKeys) {
        sub = sub[k];
    }
    return sub;
}

const CLEAN_LIST = [61]
function cleanField(team, field) {
    if (CLEAN_LIST.includes(parseInt(team.teamId))) {
        return team[field].toLocaleLowerCase()
    }
    return team[field]
}

function roundNumber(value, power10, fixed) {
    if (!value && value != 0) {
        return "N/A"
    }
    return (Math.round(parseFloat(value || 0) * (Math.pow(10, power10))) / (Math.pow(10, power10))).toFixed(fixed)
}

function cleanRank(rank) {
    if (rank == null || (!rank && rank != 0)) {
        return "N/A"
    }

    let tied = String(rank)?.includes(".5")
    let rankString = ""
    if (rank && tied) {
        rankString = `T-${roundNumber(Math.floor(parseFloat(rank)), 2, 0)}`;
    } else if (rank) {
        rankString = `${roundNumber(Math.floor(parseFloat(rank)), 2, 0)}`
    } else {
        rankString = "N/A"
    }
    return rankString
}

var leaderTitle = "Statistics";
var statMinimum = " (adapted from <a href='https://www.pro-football-reference.com/about/minimums.htm'>Pro Football Reference</a>)."
if (type == "passing") {
    leaderTitle = "Passing Statistics"
    statMinimum = "min. 14 dropbacks per team-game" + statMinimum
} else if (type == "rushing") {
    leaderTitle = "Rushing Statistics"
    statMinimum = "min. 6.25 carries per team-game" + statMinimum
} else if (type == "receiving") {
    leaderTitle = "Receiving Statistics"
    statMinimum = "min. 1.875 targets per team-game" + statMinimum
} else {
    leaderTitle = type
    statMinimum = ""
}


%>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <link href="/assets/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
        <link href="/assets/css/dashboard.css" rel="stylesheet">
        <link href="/assets/css/blog.css" rel="stylesheet">
        <link href="/assets/css/dark-game.css" rel="stylesheet">
        <link href="/assets/css/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">

        <%
            let title = `${leaderTitle} | ${season} | Game on Paper`
            let subtitle = `${leaderTitle} during the ${season} season`;
        %>

        <meta http-equiv="content-type" content="text/html; charset=UTF-8">
        <meta http-equiv="x-ua-compatible" content="IE=edge,chrome=1">
        <meta name="viewport" content="initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
        <meta name="referrer" content="origin-when-cross-origin">
        <link rel="canonical" href="https://gameonpaper.com/cfb/year/<%= season %>/players">
        <title><%= title %></title>
        <meta name="description" content="<%= subtitle %>">

        <meta property="og:site_name" content="GameOnPaper.com">
        <meta property="og:url" content="https://gameonpaper.com/cfb/year/<%= season %>/players">
        <meta property="og:title" content="<%= title %>">
        <meta property="og:description" content="<%= subtitle %>">
        <meta property="og:image:width" content="1200">
        <meta property="og:image:height" content="630">
        <meta property="og:type" content="website">
        <meta name="twitter:site" content="Game on Paper">
        <meta name="twitter:url" content="https://gameonpaper.com/cfb/year/<%= season %>/players">
        <meta name="twitter:title" content="<%= title %>">
        <meta name="twitter:description" content="<%= subtitle %>">
        <meta name="twitter:card" content="summary">
        <meta name="title" content="<%= title %>">
        <meta name="medium" content="website">
        <script defer data-domain="gameonpaper.com" src="https://plausible.io/js/script.js"></script>
        <style>
            @media (prefers-color-scheme: dark) {
            <% players.forEach(t => {  %>
                img.team-logo-<%= t.teamId %> {
                    content: url('https://a.espncdn.com/i/teamlogos/ncaa/500-dark/<%= t.teamId %>.png')
                }
            <% }); %>
            }
            /* img.team-logo-153 {
                content: url('/assets/img/crying-jordan.png');
            }   */
            img.team-logo-61 {
                content: url('/assets/img/ennui-uga.png');
                /* Sourced from the Moon Crew Discord server */
            }
        </style>
    </head>
    <body>
        <%- include('../../partials/nav-header') %>
        <div class="container">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                  <li class="breadcrumb-item" aria-current="page">Seasons</li>
                  <li class="breadcrumb-item" aria-current="page"><a href="/cfb/year/<%= season %>"><%= season %></a></li>
                  <li class="breadcrumb-item" aria-current="page"><a href="/cfb/year/<%= season %>/<%= type %>"><%= leaderTitle %></a></li>
                </ol>
            </nav>
        </div>
        <div class="container">
            <div class="row mb-3">
                <div class="col-lg-6 col-xs-12 mb-xs-3">
                    <h2><%= leaderTitle %></h2>
                    <p class="m-0 mb-2 text-muted text-small">Data from <a href="https://github.com/sportsdataverse/cfbfastR">cfbfastR</a>, may differ from ESPN due to data availability/quality. Note: metrics are <strong>not</strong> adjusted for quality of opponent. To qualify, <%- statMinimum %></p>

                    <% if (type == "receiving") { %>
                        <p class="m-0 mb-2 text-muted text-small"><strong>Note: </strong> ESPN does not consistently mark targeted receivers for incomplete passes, which affects Catch %, EPA/target and Yards/Target averages.</p>
                    <% } %>

                    <p class="mt-0 text-muted text-small game-context">Last updated: <abbr title="If this is more than one week out of date during the season, please let us know at @gameonpaper on Twitter."><span class="game-date"><%= last_updated %></span></abbr></p>
                </div>
                <div class="ms-auto col-lg-6 col-xs-12">
                    <form class="mb-3 d-flex justify-content-lg-end justify-content-xs-start" id="dropdown-form">
                        <div class="row">
                            <div class="col-auto mb-xs-3 mb-sm-0">
                                <%
                                // https://stackoverflow.com/questions/8273047/javascript-function-similar-to-python-range
                                let range = (start, end) => Array.from(Array(end + 1).keys()).slice(start);
                                let yrRange = range(2014, 2024); // data only goes back to 2014
                                %>
                                <select class="form-select form-select-md mb-3" id="yearSelect">
                                    <option value="-1">Choose Season...</option>
                                    <% yrRange.reverse().forEach(yr => { %>
                                        <option value="<%= yr %>" <%= (yr == season) ? "selected": ""%>><%= yr %></option>
                                    <% }); %>
                                </select>
                            </div>
                            <div class="col-auto mb-xs-3 mb-sm-0">
                                <select class="form-select form-select-md" id="typeSelect">
                                    <option value="-1">Choose Type...</option>
                                    <option value="passing" <%= (type == "passing") ? "selected": "" %>>Passing</option>
                                    <option value="rushing" <%= (type == "rushing") ? "selected": "" %>>Rushing</option>
                                    <option value="receiving" <%= (type == "receiving") ? "selected": "" %>>Receiving</option>
                                </select>
                            </div>
                            <div class="col-auto mb-xs-3 mb-sm-0">
                                <select class="form-select form-select-md" id="sortSelect">
                                    <option value="-1">Choose Sort...</option>
                                    <% if (type == "passing") { %>
                                        <optgroup label="Passing">
                                            <option value="statistics.sackAdjustedYards" <%= (sort == "statistics.sackAdjustedYards") ? "selected": "" %>>Sack-Adj Yds</option>
                                            <option value="advanced.totalEPA" <%= (sort == "advanced.totalEPA") ? "selected": "" %>>EPA</option>
                                            <option value="statistics.yardsPerDropback" <%= (sort == "statistics.yardsPerDropback") ? "selected": "" %>>Yards/DB</option>
                                            <option value="advanced.epaPerPlay" <%= (sort == "advanced.epaPerPlay") ? "selected": "" %>>EPA/DB</option>
                                            <option value="advanced.successRate" <%= (sort == "advanced.successRate") ? "selected": "" %>>Pass SR%</option>
                                        </optgroup>
                                    <% } else if (type == "rushing") { %>
                                        <optgroup label="Rushing">
                                            <option value="statistics.yards" <%= (sort == "statistics.yards") ? "selected": "" %>>Yards</option>
                                            <option value="advanced.totalEPA" <%= (sort == "advanced.totalEPA") ? "selected": "" %>>EPA</option>
                                            <option value="statistics.yardsPerPlay" <%= (sort == "statistics.yardsPerPlay") ? "selected": "" %>>Yards/Rush</option>
                                            <option value="advanced.epaPerPlay" <%= (sort == "advanced.epaPerPlay") ? "selected": "" %>>EPA/Rush</option>
                                            <option value="advanced.successRate" <%= (sort == "advanced.successRate") ? "selected": "" %>>Rush SR%</option>
                                        </optgroup>
                                    <% } else if (type == "receiving") { %>
                                        <optgroup label="Receiving">
                                            <option value="statistics.yards" <%= (sort == "statistics.yards") ? "selected": "" %>>Yards</option>
                                            <option value="advanced.totalEPA" <%= (sort == "advanced.totalEPA") ? "selected": "" %>>EPA</option>
                                            <option value="statistics.yardsPerPlay" <%= (sort == "statistics.yardsPerPlay") ? "selected": "" %>>Yards/Tgt</option>
                                            <option value="advanced.epaPerPlay" <%= (sort == "advanced.epaPerPlay") ? "selected": "" %>>EPA/Tgt</option>
                                            <option value="advanced.successRate" <%= (sort == "advanced.successRate") ? "selected": "" %>>Rec SR%</option>
                                        </optgroup>
                                    <% } %>
                                </select>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-12">
                    <div class="table-responsive"> <!-- team leaderboards -->
                        <table class="table table-sm table-responsive">
                            <%
                                var arrowType = '<i class="bi bi-arrow-down"></i>';
                                //if ((type == "defensive" && sort != "overall.havocRate") || (type == "offensive" && sort == "overall.havocRate")) {
                                    //arrowType = '<i class="bi bi-arrow-up"></i>'
                                //}
                            %>
                            <thead>
                                <th class="text-right" colspan="1">Rk</th>
                                <th class="text-left" colspan="1">Player</th>
                                <th class="text-center" colspan="1">Games</th>
                                <% if (type == "passing") { %>
                                    <th class="text-center" colspan="1">Dropbacks <%- (sort == "statistics.dropbacks") ? arrowType : "" %></th>
                                    <th class="text-center" colspan="1">Sack-Adj Yds <%- (sort == "statistics.sackAdjustedYards") ? arrowType : "" %></th>
                                    <th class="text-center" colspan="1">EPA <%- (sort == "advanced.totalEPA") ? arrowType : "" %></th>
                                    <th class="text-center" colspan="1">Yards/DB <%- (sort == "statistics.yardsPerDropback") ? arrowType : "" %></th>
                                    <th class="text-center" colspan="1">EPA/DB <%- (sort == "advanced.epaPerPlay") ? arrowType : "" %></th>
                                    <th class="text-center" colspan="1">SR% <%- (sort == "advanced.successRate") ? arrowType : "" %></th>
                                    <!-- <th class="text-center" colspan="1"><abbr title="Stands for 'Downfield Eventful Throwing Metric Encouraging Ripping it'. Built to find the most sicko QB performances. Developed by the Moon Crew Discord & @SickosCommittee on Twitter.">DETMER</abbr> <%- (sort == "statistics.detmer") ? arrowType : "" %></th> -->
                                <% } else if (type == "rushing") { %>
                                    <th class="text-center" colspan="1">Carries <%- (sort == "statistics.plays") ? arrowType : "" %></th>
                                    <th class="text-center" colspan="1">Yards <%- (sort == "statistics.yards") ? arrowType : "" %></th>
                                    <th class="text-center" colspan="1">EPA <%- (sort == "advanced.totalEPA") ? arrowType : "" %></th>
                                    <th class="text-center" colspan="1">Yards/Rush <%- (sort == "statistics.yardsPerPlay") ? arrowType : "" %></th>
                                    <th class="text-center" colspan="1">EPA/Rush <%- (sort == "advanced.epaPerPlay") ? arrowType : "" %></th>
                                    <th class="text-center" colspan="1">SR% <%- (sort == "advanced.successRate") ? arrowType : "" %></th>
                                <% } else if (type == "receiving") { %>
                                    <th class="text-center" colspan="1">Catches <%- (sort == "statistics.catches") ? arrowType : "" %></th>
                                    <th class="text-center" colspan="1">Targets <%- (sort == "statistics.targets") ? arrowType : "" %></th>
                                    <th class="text-center" colspan="1">Catch % <%- (sort == "statistics.catchPct") ? arrowType : "" %></th>
                                    <th class="text-center" colspan="1">Yards <%- (sort == "statistics.yards") ? arrowType : "" %></th>
                                    <th class="text-center" colspan="1">EPA <%- (sort == "advanced.totalEPA") ? arrowType : "" %></th>
                                    <th class="text-center" colspan="1">Yards/Tgt <%- (sort == "statistics.yardsPerPlay") ? arrowType : "" %></th>
                                    <th class="text-center" colspan="1">EPA/Tgt <%- (sort == "advanced.epaPerPlay") ? arrowType : "" %></th>
                                    <th class="text-center" colspan="1">SR% <%- (sort == "advanced.successRate") ? arrowType : "" %></th>
                                <% } %>
                            </thead>
                            <tbody>
                                <% var sortPrefix = sort.split(".")[0] %>
                                <% for (var i = 0; i < players.length; i++) { %>
                                    <% const t = players[i]; %>
                                    <tr>
                                        <td class="text-right" colspan="1"><%= cleanRank(retrieveValue(t, `${sort}Rank`)) %></td>
                                        <td class="text-left" colspan="1"><a href="/cfb/year/<%= season %>/team/<%= t.teamId %>"><img class="img-fluid team-logo-<%= t.teamId %> me-2" width="20px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= t.teamId %>.png" alt="ESPN team id <%= t.teamId %> <%= cleanField(t, "team") %>" title="<%= t.team %>"/><span class="visually-hidden"><%= cleanField(t, "team") %></span></a> <strong><%= cleanField(t, "name") %></strong></td>
                                        <td class="text-center" colspan="1"><%=  generateMarginalString(retrieveValue(t, `statistics.games`), 2, 0)  %></td>
                                        <% if (type == "passing") { %>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `statistics.dropbacksRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `statistics.dropbacks`), 2, 0)  %></td>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `statistics.sackAdjustedYardsRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `statistics.sackAdjustedYards`), 2, 1)  %></td>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `advanced.totalEPARank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `advanced.totalEPA`), 2, 2)  %></td>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `statistics.yardsPerDropbackRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `statistics.yardsPerDropback`), 2, 2)  %></td>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `advanced.epaPerPlayRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `advanced.epaPerPlay`), 2, 2)  %></td>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `advanced.successRateRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `advanced.successRate`) * 100, 2, 1)  %>%</td>
                                            <!-- <td class="text-center <%= generateColorRampValue(retrieveValue(t, `statistics.detmerRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `statistics.detmer`), 2, 2)  %></td> -->
                                        <% } else if (type == "rushing") { %>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `statistics.playsRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `statistics.plays`), 2, 0)  %></td>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `statistics.yardsRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `statistics.yards`), 2, 1)  %></td>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `advanced.totalEPARank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `advanced.totalEPA`), 2, 2)  %></td>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `statistics.yardsPerPlayRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `statistics.yardsPerPlay`), 2, 2)  %></td>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `advanced.epaPerPlayRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `advanced.epaPerPlay`), 2, 2)  %></td>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `advanced.successRateRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `advanced.successRate`) * 100, 2, 1)  %>%</td>
                                        <% } else if (type == "receiving") { %>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `statistics.catchesRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `statistics.catches`), 2, 0)  %></td>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `statistics.targetsRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `statistics.targets`), 2, 0)  %></td>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `statistics.catchPctRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `statistics.catchPct`) * 100, 2, 1)  %>%</td>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `statistics.yardsRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `statistics.yards`), 2, 1)  %></td>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `advanced.totalEPARank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `advanced.totalEPA`), 2, 2)  %></td>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `statistics.yardsPerPlayRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `statistics.yardsPerPlay`), 2, 2)  %></td>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `advanced.epaPerPlayRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `advanced.epaPerPlay`), 2, 2)  %></td>
                                            <td class="text-center <%= generateColorRampValue(retrieveValue(t, `advanced.successRateRank`), players.length) %>" colspan="1"><%=  generateMarginalString(retrieveValue(t, `advanced.successRate`) * 100, 2, 1)  %>%</td>
                                        <% } %>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <%- include('../../partials/footer') %>
        <%- include('../../partials/scripts') %>
        <script src="/assets/js/date-replace.js"></script>
        <script>
            document.getElementById("yearSelect").addEventListener("change", function(e) {
                e.preventDefault()

                var seasonKey = document.getElementById("yearSelect").value;
                if (seasonKey != "-1" && seasonKey != -1) {
                    let cleanWindowLocation = window.location.href.replace("<%= season %>", seasonKey)
                    cleanWindowLocation = cleanWindowLocation.split("?")[0] // reset entirely
                    window.location = cleanWindowLocation;
                }
            });

            document.getElementById("sortSelect").addEventListener("change", function(e) {
                e.preventDefault()

                var sortKey = document.getElementById("sortSelect").value;
                if (sortKey != "-1" && sortKey != -1) {
                    const cleanWindowLocation = window.location.href.split("?")[0]
                    window.location = cleanWindowLocation + `?sort=${sortKey}`;
                }
            });

            document.getElementById("typeSelect").addEventListener("change", function(e) {
                e.preventDefault()

                var typeKey = document.getElementById("typeSelect").value;
                if (typeKey != "-1" && typeKey != -1) {
                    let cleanWindowLocation = window.location.href.replace("<%= type %>", typeKey)
                    cleanWindowLocation = cleanWindowLocation.split("?")[0] // reset entirely
                    window.location = cleanWindowLocation;
                }
            });
        </script>
    </body>
</html>
