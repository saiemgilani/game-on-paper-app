<!DOCTYPE html>
<html>
<%
const homeComp = gameData.gameInfo.competitors[0];
const awayComp = gameData.gameInfo.competitors[1];
const homeTeam = homeComp.team;
const awayTeam = awayComp.team;
function getNumberWithOrdinal(n) {
    var s = ["th", "st", "nd", "rd"];
    v = n % 100;
    return n + (s[(v - 20) % 10] || s[v] || s[0]);
}
function formatDown(down, playType) {
    if (playType.includes("Kickoff")) {
        return "Kickoff"
    } else if (playType.includes("Extra Point") || playType.includes("Conversion")) {
        return "PAT"
    } else if (down > -1) {
        return getNumberWithOrdinal(down)
    } else {
        return down
    }
}
function formatYardline(yardsToEndzone, offenseAbbrev, defenseAbbrev) {
    if (yardsToEndzone == 50) {
        return "50";
    } else if (yardsToEndzone < 50) {
        return `${defenseAbbrev} ${yardsToEndzone}`
    } else {
        return `${offenseAbbrev} ${100 - yardsToEndzone}`
    }
}
function formatDistance(down, type, distance, yardline) {
    var dist = (distance == 0 || yardline <= distance) ? "Goal" : distance
    var downForm = formatDown(down, type)
    if (downForm.includes("Kickoff") || downForm.includes("PAT")) {
        return downForm
    } else {
        return downForm + " & " + dist
    }
}
stat_key_title_mapping = {
    "EPA_plays" : "Total Plays",
    "scrimmage_plays" : "Scrimmage Plays",
    "EPA_overall_total" : "Total EPA",
    "EPA_passing_overall" : "&emsp;&emsp;Passing EPA",
    "EPA_rushing_overall" : "&emsp;&emsp;Rushing EPA",
    "EPA_per_play" : "EPA/Play",
    "EPA_passing_per_play" : "&emsp;&emsp;Pass EPA/Play",
    "EPA_rushing_per_play" : "&emsp;&emsp;Rush EPA/Play",
    "rushes" : "Rushes",
    "rushing_power_success" : "&emsp;&emsp;Power Success Runs",
    "rushing_stuff_rate" : "&emsp;&emsp;Stuffed Runs",
    "rushing_stopped_rate" : "&emsp;&emsp;Stopped Runs",
    "rushing_opportunity_rate" : "&emsp;&emsp;Opportunity Runs",
    "rushing_highlight_run" : "&emsp;&emsp;Highlight Runs",
    "havoc_total" : "Havoc Plays Allowed",
    "havoc_total_pass" : "&emsp;&emsp;Passing",
    "havoc_total_rush" : "&emsp;&emsp;Rushing",
    "EPA_penalty": "Penalty EPA",
    "special_teams_plays" : "Special Teams Plays",
    "EPA_sp" : "Special Teams EPA",
    "EPA_fg" : "&emsp;&emsp;Field Goal EPA",
    "EPA_punt" : "&emsp;&emsp;Punting EPA",
    "EPA_kickoff" : "&emsp;&emsp;Kickoff Return EPA",
    "TFL" : "TFLs Allowed",
    "TFL_pass" : "&emsp;&emsp;Passing",
    "TFL_rush" : "&emsp;&emsp;Rushing",
    "EPA_success" : "EPA Success Plays",
    "EPA_success_pass" : "&emsp;&emsp;Passing",
    "EPA_success_rush" : "&emsp;&emsp;Rushing",
    "EPA_success_standard_down" : "&emsp;&emsp;Standard Down",
    "EPA_success_passing_down": "&emsp;&emsp;Passing Down",
    "EPA_explosive" : "EPA Explosive Plays",
    "EPA_explosive_passing" : "&emsp;&emsp;Passing",
    "EPA_explosive_rushing" : "&emsp;&emsp;Rushing",
    "scoring_opps_opportunities" : "Scoring Opps",
    "scoring_opps_points" : "&emsp;&emsp;Total Points",
    "scoring_opps_pts_per_opp" : "&emsp;&emsp;Points per Opp",
    "field_pos_avg_start" : "Avg Starting FP",
    "field_pos_avg_starting_predicted_pts" : "&emsp;&emsp;Predicted Points"
}
turnover_vec = [
    "Blocked Field Goal",
    "Blocked Field Goal Touchdown",
    "Blocked Punt",
    "Blocked Punt Touchdown",
    "Field Goal Missed",
    "Missed Field Goal Return",
    "Missed Field Goal Return Touchdown",
    "Fumble Recovery (Opponent)",
    "Fumble Recovery (Opponent) Touchdown",
    "Fumble Return Touchdown",
    "Defensive 2pt Conversion",
    "Interception",
    "Interception Return",
    "Interception Return Touchdown",
    "Pass Interception Return",
    "Pass Interception Return Touchdown",
    "Kickoff Team Fumble Recovery",
    "Kickoff Team Fumble Recovery Touchdown",
    "Punt Touchdown",
    "Punt Return Touchdown",
    "Sack Touchdown",
    "Uncategorized Touchdown"
]
function roundNumber(value, power10, fixed) {
    return (Math.round(parseFloat(value || 0) * (Math.pow(10, power10))) / (Math.pow(10, power10))).toFixed(fixed)
}
function createPlayRow(play, canCollapse, collapsePrefix, expandingRowCallback) {
    var classText = "";
    if (turnover_vec.includes(play.type.text) || play.text.includes("fumble")) {
        classText = " table-danger"
    } else if (play.scoringPlay == true) {
        classText = " table-success"
    } else if (play.text.toLocaleLowerCase().includes("penalty")) {
        classText = " table-warning"
    }
    var period = `Q${play.period}`;
    if (play.period > 5) {
        period = `${play.period - 4}OT`
    } else if (play.period == 5) {
        period = "OT"
    } else {
        period = `Q${play.period} ${play.clock.displayValue}`;
    }
    var offense = (play.pos_team == homeTeam.id) ? homeTeam : awayTeam;
    var defense = (play.pos_team == homeTeam.id) ? awayTeam : homeTeam;
    var scoreText = (play.scoringPlay == true) ? ` - <strong>${awayTeam.abbreviation} ${play.awayScore}, ${homeTeam.abbreviation} ${play.homeScore}</strong>` : ` - ${awayTeam.abbreviation} ${play.awayScore}, ${homeTeam.abbreviation} ${play.homeScore}`
    var collapsibleText = (canCollapse) ? `data-bs-toggle="collapse" href="#play-${collapsePrefix}-${play.game_play_number}"` : ''
    var baseRow = `
    <tr ${collapsibleText} class="accordion-toggle${classText}">
        <td style="text-align: left;">${period}</td>
        <td style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/${play.pos_team}.png" alt="ESPN team id ${play.pos_team}"/></td>
        <td style="text-align: left;">(${formatDistance(play.start.down, play.type.text, play.start.distance, play.start.yardsToEndzone)} at ${ formatYardline(play.start.yardsToEndzone, offense.abbreviation, defense.abbreviation) }) ${play.text}${scoreText}</td>
        <td class="numeral" style="text-align: center;">${roundNumber(parseFloat(play.expectedPoints.added), 2, 2)}</td>
        <td class="numeral" style="text-align: center;">${roundNumber(parseFloat(play.winProbability.before) * 100, 3, 1)}%</td>
        <td class="numeral" style="text-align: right;">${roundNumber(parseFloat(play.winProbability.added) * 100, 3, 1)}%</td>
    </tr>`;
    if (canCollapse) {
        baseRow += `<tr>
            <td colspan="6" class="hiddenRow">
                <div class="accordian-body collapse" id="play-${collapsePrefix}-${play.game_play_number}"> 
                    <div class="row p-1">`;
        if (expandingRowCallback != null) {
            baseRow += expandingRowCallback(play);
        } else {
            baseRow += `
            <div class="ms-sm-auto col-lg-6">
                <p style="text-align: center;"><strong>Play Type:</strong> ${play.type.text}</p>
                <p style="text-align: center;"><strong>Started Drive at:</strong> ${formatYardline(play.drive_start, offense.abbreviation, defense.abbreviation)}</p>
                <p style="text-align: center;"><strong>Expected Points (Drive Start):</strong> ${roundNumber(parseFloat(play.drive_start_EP), 2, 2)}</p>
                <p style="text-align: center;"><strong>Expected Points (Current):</strong> ${roundNumber(parseFloat(play.expectedPoints.before), 2, 2)}</p>
            </div>
            <div class="ms-sm-auto col-lg-6">
                <p style="text-align: center;"><strong>Score:</strong> ${awayTeam.abbreviation} ${play.awayScore}, ${homeTeam.abbreviation} ${play.homeScore}</p>
                <p style="text-align: center;"><strong>Drive Summary:</strong> ${play.drive_play_index} plays, ${play.drive_total_yards} yards</p>
                <p style="text-align: center;"><strong>Total Drive EPA (so far):</strong> ${roundNumber(parseFloat(play.prog_drive_EPA), 2, 2)}</p>
                <p style="text-align: center;"><strong>Total Drive WPA (so far):</strong> ${roundNumber(parseFloat(play.prog_drive_WPA) * 100, 3, 1)}%</p>
            </div>
            `;
        } 
        baseRow += `</div>
                </div>
            </td>
        </tr>`
    }
    return baseRow;
}
function buildPlayTable(plays, prefix, expandable, errorMsg, showGuide, expandingRowCallback) {
    if (plays == null || plays.length == 0) {
        return `<p class="text-center text-muted">${errorMsg}</p>`;
    }
    let guideText = (showGuide) ? `<caption>Play shading guide: 
        <ul>
            <li><strong>Yellow</strong> - penalty</li>
            <li><strong>Red</strong> - turnover</li>
            <li><strong>Green</strong> - scoring play</li>
        </ul>
    </caption>` : ""
    
    var baseTable = `
    <table class="table table-sm table-responsive" style="border-collapse:collapse;">
        ${guideText}
        <thead>
            <tr>
                <th style="text-align: left;">Time</th>
                <th style="text-align: center;">Offense</th>
                <th style="text-align: left;">Play Description</th>
                <th style="text-align: center;">EPA</th>
                <th style="text-align: center;">WP%</th>
                <th style="text-align: right;">WPA</th>
            </tr>
        </thead>
        <tbody>`;
    plays.forEach(play => {
        baseTable += createPlayRow(play, expandable, prefix, expandingRowCallback);
    });
    baseTable += `</tbody>
    </table>`;
    return baseTable;
}
%>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="/assets/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
    <link href="/assets/css/dashboard.css" rel="stylesheet">
    <link href="/assets/css/blog.css" rel="stylesheet">

    <%
    var title = ""
    var subtitle = ""
    if (gameData.gameInfo.status.type.completed == true || gameData.gameInfo.status.type.name.includes("STATUS_IN_PROGRESS")) {
        title = `Game: ${gameData.gameInfo.competitors[1].team.nickname} ${gameData.gameInfo.competitors[1].score}, ${gameData.gameInfo.competitors[0].team.nickname} ${gameData.gameInfo.competitors[0].score} | Game on Paper`
    } else {
        title = `Game: ${gameData.gameInfo.competitors[1].team.nickname} vs ${gameData.gameInfo.competitors[0].team.nickname} | Game on Paper`
    }
    subtitle = `${gameData.gameInfo.competitors[1].team.nickname} vs ${gameData.gameInfo.competitors[0].team.nickname}`;
    %>

    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta http-equiv="x-ua-compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="referrer" content="origin-when-cross-origin">
    <link rel="canonical" href="http://game-on-paper-csag6t5oia-uc.a.run.app/cfb/game/<%= gameData.id %>">
    <title><%= title %></title>
    <meta name="description" content="Advanced stats for <%= subtitle %>">

    <meta property="og:site_name" content="GameOnPaper.com">
    <meta property="og:url" content="http://game-on-paper-csag6t5oia-uc.a.run.app/cfb/game/<%= gameData.id %>">
    <meta property="og:title" content="<%= title %>">
    <meta property="og:description" content="Advanced stats for <%= subtitle %>">
    <meta property="og:image" content="https://s.espncdn.com/stitcher/sports/football/college-football/events/<%= gameData.id %>.png?templateId=espn.com.share.1">
    <meta property="og:image:width" content="1200">
    <meta property="og:image:height" content="630">
    <meta property="og:type" content="website">
    <meta name="twitter:site" content="Game on Paper">
    <meta name="twitter:url" content="http://game-on-paper-csag6t5oia-uc.a.run.app/cfb/game/<%= gameData.id %>">
    <meta name="twitter:title" content="<%= title %>">
    <meta name="twitter:description" content="<%= subtitle %>">
    <meta name="twitter:card" content="summary">
    <meta name="title" content="<%= title %>">
    <meta name="medium" content="website">
</head>
<body>
    <div class="container-fluid">
        <header class="blog-header py-3">
            <div class="row flex-nowrap justify-content-between align-items-center">
                <div class="col-2 pt-1">
                    <a class="btn btn-sm btn-outline-primary" href="/">Index</a>
                </div>
                <div class="col-8 text-center">
                    <div>
                        <h2><%= awayTeam.nickname %> <%= awayComp.score %>, <%= homeTeam.nickname %> <%= homeComp.score %></h2>
                        <p class="text-small" id="game-date"></p>
                    </div>
                </div>
                <div class="col-2 d-flex justify-content-end align-items-center">
                    <a class="btn btn-sm btn-outline-secondary" href="/cfb/game/<%= gameData.gameInfo.id %>?json=1">Raw JSON</a>
                </div>
            </div>
        </header>
        
        <div class="nav-scroller py-1 mb-3">
            <nav class="nav d-flex justify-content-between">
                <a href="#wpChart" class="p-2 link-secondary">WP Chart</a>
                <a href="#epChart" class="p-2 link-secondary">EPA Chart</a>
                <a href="#team-stats" class="p-2 link-secondary">Team Stats</a>
                <a href="#player-stats" class="p-2 link-secondary">Player Stats</a>
                <a href="#big-plays" class="p-2 link-secondary">Big Plays</a>
                <a href="#most-imp-plays" class="p-2 link-secondary">Most Important Plays</a>
                <a href="#scoring-plays" class="p-2 link-secondary">Scoring Plays</a>
                <a href="#all-plays" class="p-2 link-secondary">All Plays</a>
                <a class="p-2 link-secondary" href="https://www.espn.com/college-football/game/_/gameId/<%= gameData.gameInfo.id %>">ESPN</a>
            </nav>
        </div>
    </div>
    <div class="container-fluid">
        <% if (gameData.plays.length > 0) { %>
            <div class="row mb-3">
                <main class="ms-sm-auto col-lg-6 px-md-4">
                    <div>
                        <h1 class="h2">Win Probability</h1>
                        <%
                            function printSpread() {
                                if (parseFloat(gameData.homeTeamSpread) > 0) {
                                    return `${homeTeam.abbreviation} -${gameData.homeTeamSpread}`
                                } else if (parseFloat(gameData.homeTeamSpread) < 0) {
                                    return `${awayTeam.abbreviation} ${gameData.homeTeamSpread}`
                                } else {
                                    return "PUSH"
                                }
                            }
                        %>
                        <p class="text-small">
                            <% if (gameData.gameInfo.status.type.completed == true) { %>
                                Game Excitement Index: <%= (Math.round(gameData.gameInfo.gei * 100) / 100).toFixed(2) %> | 
                            <% } %>Spread: <%= printSpread() %>
                            <% if ((gameData.gameInfo.status.type.name.includes("STATUS_IN_PROGRESS") || gameData.gameInfo.status.type.name.includes("STATUS_END_PERIOD") || gameData.gameInfo.status.type.name.includes("STATUS_HALFTIME")) && gameData.plays.length > 0) { %>
                                <% let lastPlay = gameData.plays[gameData.plays.length - 1] %>
                                <% if (lastPlay.winProbability.before >= 0.5) { %>
                                 | Current: <%= (lastPlay.pos_team == homeTeam.id) ? homeTeam.abbreviation : awayTeam.abbreviation %> <%= ((Math.round(lastPlay.winProbability.before * 1000) / 1000) * 100).toFixed(1) %>%
                                <% } else { %>
                                 | Current: <%= (lastPlay.pos_team == homeTeam.id) ? awayTeam.abbreviation : homeTeam.abbreviation %> <%= ((Math.round((1.0 - lastPlay.winProbability.before) * 1000) / 1000) * 100).toFixed(1) %>%
                                <% } %>
                            <% } %>
                            <!-- can't offer download button here because of canvas security issues -->
                             <!-- | 
                            <a id="wp-download" download="game-wp-<%= gameData.gameInfo.id %>.jpg" href="">Download Chart</a></p> -->
                    </div>
                    <canvas class="my-4 w-100" id="wpChart" width="900" height="380"></canvas>
                </main>
                <main class="ms-sm-auto col-lg-6 px-md-4">
                    <div>
                        <h1 class="h2">Expected Points</h1>
                        <p class="text-small"><a id="ep-download" download="game-ep-<%= gameData.gameInfo.id %>.jpg" href="">Download Chart</a></p>
                    </div>
                    <canvas class="my-4 w-100" id="epChart" width="900" height="380"></canvas>
                </main>
            </div>
        <% } %>
        <% if (gameData.gameInfo.status.type.name.includes("STATUS_IN_PROGRESS") || gameData.gameInfo.status.type.name.includes("STATUS_END_PERIOD") || gameData.gameInfo.status.type.name.includes("STATUS_HALFTIME") || gameData.gameInfo.status.type.completed == true) { %> 
            <div id="team-stats" class="row mb-3">
                <div class="col-md-12 ms-sm-auto col-lg-12 px-md-4">
                    <h2 id="team-stats" class="d-inline">Team Stats</h2> <span class="d-inline text-small"><a data-bs-toggle="collapse" href="#boxScoreContent" style="text-decoration: none;">[show]</a></span>
                    <div class="panel-group">
                        <div class="panel panel-default">
                            <div id="boxScoreContent" class="panel-collapse collapse">
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-md-4 ms-sm-auto col-lg-4">
                                            <div class="table-responsive">
                                                <% var columns = ["EPA_plays", "scrimmage_plays", "EPA_overall_total", "EPA_passing_overall", "EPA_rushing_overall", "EPA_sp", "EPA_penalty", "EPA_per_play","EPA_passing_per_play","EPA_rushing_per_play"]; %>
                                                <table class="table table-sm table-responsive">
                                                    <thead>
                                                        <tr>
                                                            <th style="text-align: left;color: black; font-weight: bold;">Overall</th>
                                                            <% gameData.advBoxScore.team.map(group => group.pos_team).forEach(value => { %>
                                                                <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.id) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                                            <% }); %>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <% columns.forEach(item => { %>
                                                            <tr>
                                                                <td style="text-align: left;"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                                                <% gameData.advBoxScore.team.forEach(teamData => { %>
                                                                    <td class="numeral" style="text-align: center;"><%= teamData[item] %></td>
                                                                <% }); %>
                                                            </tr>
                                                        <% }); %>
                                                    </tbody>
                                                </table>
                                            </div>
                                            <div class="table-responsive">
                                                <% var columns = ["scrimmage_plays","rushes","rushing_power_success","rushing_stuff_rate","rushing_stopped_rate","rushing_opportunity_rate","rushing_highlight_run"]; %>
                                                <table class="table table-sm table-responsive">
                                                    <thead>
                                                        <tr>
                                                            <th style="text-align: left;color: black; font-weight: bold;">Rushing</th>
                                                            <% gameData.advBoxScore.team.map(group => group.pos_team).forEach(value => { %>
                                                                <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.id) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                                            <% }); %>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <% columns.forEach(item => { %>
                                                            <tr>
                                                                <td style="text-align: left;"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                                                <% gameData.advBoxScore.team.forEach(teamData => { %>
                                                                    <td class="numeral" style="text-align: center;"><%= teamData[item] %></td>
                                                                <% }); %>
                                                            </tr>
                                                        <% }); %>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="col-md-4 ms-sm-auto col-lg-4">
                                            <div class="table-responsive">
                                                <% var columns = ["EPA_plays","scrimmage_plays","EPA_success","EPA_success_pass","EPA_success_rush","EPA_success_standard_down","EPA_success_passing_down"]; %>
                                                <table class="table table-sm table-responsive">
                                                    <thead>
                                                        <tr>
                                                            <th style="text-align: left;color: black; font-weight: bold;">Success Rates</th>
                                                            <% gameData.advBoxScore.team.map(group => group.pos_team).forEach(value => { %>
                                                                <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.id) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                                            <% }); %>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <% columns.forEach(item => { %>
                                                            <tr>
                                                                <td style="text-align: left;"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                                                <% gameData.advBoxScore.team.forEach(teamData => { %>
                                                                    <td class="numeral" style="text-align: center;"><%= teamData[item] %></td>
                                                                <% }); %>
                                                            </tr>
                                                        <% }); %>
                                                    </tbody>
                                                </table>
                                            </div>
                            
                                            <div class="table-responsive">
                                                <% var columns = ["EPA_plays","scrimmage_plays","EPA_explosive","EPA_explosive_passing","EPA_explosive_rushing"]; %>
                                                <table class="table table-sm table-responsive">
                                                    <thead>
                                                        <tr>
                                                            <th style="text-align: left;color: black; font-weight: bold;">Explosiveness</th>
                                                            <% gameData.advBoxScore.team.map(group => group.pos_team).forEach(value => { %>
                                                                <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.id) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                                            <% }); %>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <% columns.forEach(item => { %>
                                                            <tr>
                                                                <td style="text-align: left;"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                                                <% gameData.advBoxScore.team.forEach(teamData => { %>
                                                                    <td class="numeral" style="text-align: center;"><%= teamData[item] %></td>
                                                                <% }); %>
                                                            </tr>
                                                        <% }); %>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="col-md-4 ms-sm-auto col-lg-4">
                                            <div class="table-responsive">
                                                <% var columns = ["EPA_plays","scrimmage_plays","havoc_total","havoc_total_pass","havoc_total_rush","TFL","TFL_pass","TFL_rush"]; %>
                                                <table class="table table-sm table-responsive">
                                                    <thead>
                                                        <tr>
                                                            <th style="text-align: left;color: black; font-weight: bold;">Defensive</th>
                                                            <% gameData.advBoxScore.team.map(group => group.pos_team).forEach(value => { %>
                                                                <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.id) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                                            <% }); %>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <% columns.forEach(item => { %>
                                                            <tr>
                                                                <td style="text-align: left;"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                                                <% gameData.advBoxScore.team.forEach(teamData => { %>
                                                                    <td class="numeral" style="text-align: center;"><%= teamData[item] %></td>
                                                                <% }); %>
                                                            </tr>
                                                        <% }); %>
                                                    </tbody>
                                                </table>
                                            </div>                                        
                                            <div class="table-responsive">
                                                <% var columns = ["special_teams_plays","EPA_sp","EPA_fg","EPA_punt","EPA_kickoff"]; %>
                                                <table class="table table-sm table-responsive">
                                                    <thead>
                                                        <tr>
                                                            <th style="text-align: left;color: black; font-weight: bold;">Special Teams</th>
                                                            <% gameData.advBoxScore.team.map(group => group.pos_team).forEach(value => { %>
                                                                <th style="text-align: center;"><img class="img-fluid" width="35px" src="https://a.espncdn.com/i/teamlogos/ncaa/500/<%= (value == homeTeam.id) ? homeTeam.id : awayTeam.id %>.png" alt="ESPN team id <%= value %>"/></th>
                                                            <% }); %>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        <% columns.forEach(item => { %>
                                                            <tr>
                                                                <td style="text-align: left;"><%- (Object.keys(stat_key_title_mapping).includes(item)) ? stat_key_title_mapping[item] : item %></td>
                                                                <% gameData.advBoxScore.team.forEach(teamData => { %>
                                                                    <td class="numeral" style="text-align: center;"><%= teamData[item] %></td>
                                                                <% }); %>
                                                            </tr>
                                                        <% }); %>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="player-stats" class="row mb-3">
                <%
                    let homeTeamBox = {
                        "pass" : gameData.advBoxScore.pass.filter(g => g.pos_team == homeTeam.id),
                        "rush" : gameData.advBoxScore.rush.filter(g => g.pos_team == homeTeam.id),
                        "receiver" : gameData.advBoxScore.receiver.filter(g => g.pos_team == homeTeam.id)
                    }
                    homeTeamBox.pass.sort((a, b) => parseFloat(b.EPA) - parseFloat(a.EPA))
                    homeTeamBox.rush.sort((a, b) => parseFloat(b.EPA) - parseFloat(a.EPA))
                    homeTeamBox.receiver.sort((a, b) => parseFloat(b.EPA) - parseFloat(a.EPA))
                    let awayTeamBox = {
                        "pass" : gameData.advBoxScore.pass.filter(g => g.pos_team == awayTeam.id),
                        "rush" : gameData.advBoxScore.rush.filter(g => g.pos_team == awayTeam.id),
                        "receiver" : gameData.advBoxScore.receiver.filter(g => g.pos_team == awayTeam.id)
                    }
                    awayTeamBox.pass.sort((a, b) => parseFloat(b.EPA) - parseFloat(a.EPA))
                    awayTeamBox.rush.sort((a, b) => parseFloat(b.EPA) - parseFloat(a.EPA))
                    awayTeamBox.receiver.sort((a, b) => parseFloat(b.EPA) - parseFloat(a.EPA))
                %>
                <div class="col-lg-6 ms-sm-auto px-md-4 mb-xs-3 mb-lg-0">
                    <div class="panel-group">
                        <div class="panel panel-default">
                          <div class="panel-heading">
                            <div class="panel-title">
                                <h2 class="d-inline"><%= awayTeam.location %></h2> <span class="d-inline text-small"><a data-bs-toggle="collapse" href="#awayTeamCollapse" style="text-decoration: none;">[show]</a></span>
                            </div>
                          </div>
                          <div id="awayTeamCollapse" class="panel-collapse collapse">
                            <div class="panel-body">
                                <div class="table-responsive">
                                    <table class="table table-sm table-responsive">
                                        <thead>
                                          <tr>
                                            <th rowspan="1" colspan="1"></th>
                                            <th rowspan="1" colspan="1" style="color: black; font-weight: bold; text-align: left;">Stat line</th>
                                            <th rowspan="1" colspan="1" style="color: black; font-weight: bold; text-align: center;">Yards/play</th>
                                            <th rowspan="1" colspan="1" style="color: black; font-weight: bold; text-align: center;">EPA/play</th>
                                            <th rowspan="1" colspan="1" style="color: black; font-weight: bold; text-align: center;">EPA</th>
                                            <th rowspan="1" colspan="1" style="color: black; font-weight: bold; text-align: center;">SR</th>
                                            <th rowspan="1" colspan="1" style="color: black; font-weight: bold; text-align: center;">WPA</th>
                                          </tr>
                                        </thead>
                                        <tbody>
                                        <% if (awayTeamBox.pass.length > 0) { %>
                                            <tr>
                                                <td colspan="8" class="gt_group_heading" style="color: black; font-weight: bold;">Dropbacks</td>
                                            </tr>
                                            <% awayTeamBox.pass.forEach(p => { %>
                                                <% if (p.passer_player_name.length > 0) { %>
                                                    <tr>
                                                        <td style="text-align: left;"><%= p.passer_player_name %></td>
                                                        <td style="text-align: left;"><%= p.Comp %>/<%= p.Att %>, <%= p.Yds %> yd<%= (Math.abs(parseFloat(p.Yds)) == 1) ? "" : "s" %>, <%= p.Pass_TD %> TD, <%= p.Int %> INT</td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.YPA || 0), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.EPA_per_Play), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.EPA), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.SR) * 100, 2, 0) %>%</td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.WPA) * 100, 2, 1) %>%</td>
                                                    </tr>
                                                <% } %>
                                            <% }); %>
                                        <% } %>
                                        <% if (awayTeamBox.rush.length > 0) { %>
                                            <tr>
                                            <td colspan="8" class="gt_group_heading" style="color: black; font-weight: bold;">Rush attempts</td>
                                            </tr>
                                            <% awayTeamBox.rush.forEach(p => { %>
                                                <% if (p.rusher_player_name.length > 0) { %>
                                                    <tr>
                                                        <td style="text-align: left;"><%= p.rusher_player_name %></td>
                                                        <td style="text-align: left;"><%= p.Car %> carr<%= (parseInt(p.Car) == 1) ? "y" : "ies" %>, <%= p.Yds %> yd<%= (Math.abs(parseFloat(p.Yds)) == 1) ? "" : "s" %>, <%= p.Rush_TD %> TD</td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.YPC || 0), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.EPA_per_Play), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.EPA), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.SR) * 100, 2, 0) %>%</td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.WPA) * 100, 2, 1) %>%</td>
                                                    </tr>
                                                <% } %>
                                            <% }); %>
                                        <% } %>
                                        <% if (awayTeamBox.receiver.length > 0) { %>
                                            <tr>
                                                <td colspan="8" class="gt_group_heading" style="color: black; font-weight: bold;">Pass targets</td>
                                            </tr>
                                            <% awayTeamBox.receiver.forEach(p => { %>
                                                <% if (p.receiver_player_name.length > 0) { %>
                                                    <tr>
                                                        <td style="text-align: left;"><%= p.receiver_player_name %></td>
                                                        <td style="text-align: left;"><%= p.Rec %> catch<%= (parseInt(p.Rec) == 1) ? "" : "es" %> (<%= p.Tar %> target<%= (parseInt(p.Tar) == 1) ? "" : "s" %>), <%= p.Yds %> yd<%= (Math.abs(parseFloat(p.Yds)) == 1) ? "" : "s" %>, <%= p.Rec_TD %> TD</td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.YPT || 0), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.EPA_per_Play), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.EPA), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.SR) * 100, 2, 0) %>%</td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.WPA) * 100, 2, 1) %>%</td>
                                                    </tr>
                                                <% } %>
                                            <% }); %>
                                        <% } %>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                          </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 ms-sm-auto px-md-4">
                    <div class="panel-group">
                        <div class="panel panel-default">
                          <div class="panel-heading">
                            <div class="panel-title">
                                <h2 class="d-inline"><%= homeTeam.location %></h2> <span class="d-inline text-small"><a data-bs-toggle="collapse" href="#homeTeamCollapse" style="text-decoration: none;">[show]</a></span>
                            </div>
                          </div>
                          <div id="homeTeamCollapse" class="panel-collapse collapse">
                            <div class="panel-body">
                                <div class="table-responsive">
                                    <table class="table table-sm table-responsive">
                                        <thead>
                                          <tr>
                                            <th rowspan="1" colspan="1"></th>
                                            <th rowspan="1" colspan="1" style="color: black; font-weight: bold; text-align: left;">Stat line</th>
                                            <th rowspan="1" colspan="1" style="color: black; font-weight: bold; text-align: center;">Yards/play</th>
                                            <th rowspan="1" colspan="1" style="color: black; font-weight: bold; text-align: center;">EPA/play</th>
                                            <th rowspan="1" colspan="1" style="color: black; font-weight: bold; text-align: center;">EPA</th>
                                            <th rowspan="1" colspan="1" style="color: black; font-weight: bold; text-align: center;">SR</th>
                                            <th rowspan="1" colspan="1" style="color: black; font-weight: bold; text-align: center;">WPA</th>
                                          </tr>
                                        </thead>
                                        <tbody>
                                        <% if (homeTeamBox.pass.length > 0) { %>
                                            <tr>
                                                <td colspan="8" class="gt_group_heading" style="color: black; font-weight: bold;">Dropbacks</td>
                                            </tr>
                                            <% homeTeamBox.pass.forEach(p => { %>
                                                <% if (p.passer_player_name.length > 0) { %>
                                                    <tr>
                                                        <td style="text-align: left;"><%= p.passer_player_name %></td>
                                                        <td style="text-align: left;"><%= p.Comp %>/<%= p.Att %>, <%= p.Yds %> yd<%= (Math.abs(parseFloat(p.Yds)) == 1) ? "" : "s" %>, <%= p.Pass_TD %> TD, <%= p.Int %> INT</td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.YPA || 0), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.EPA_per_Play), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.EPA), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.SR) * 100, 2, 0) %>%</td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.WPA) * 100, 2, 1) %>%</td>
                                                    </tr>
                                                <% } %>
                                            <% }); %>
                                        <% } %>
                                        <% if (homeTeamBox.rush.length > 0) { %>
                                            <tr>
                                            <td colspan="8" class="gt_group_heading" style="color: black; font-weight: bold;">Rush attempts</td>
                                            </tr>
                                            <% homeTeamBox.rush.forEach(p => { %>
                                                <% if (p.rusher_player_name.length > 0) { %>
                                                    <tr>
                                                        <td style="text-align: left;"><%= p.rusher_player_name %></td>
                                                        <td style="text-align: left;"><%= p.Car %> carr<%= (parseInt(p.Car) == 1) ? "y" : "ies" %>, <%= p.Yds %> yd<%= (Math.abs(parseFloat(p.Yds)) == 1) ? "" : "s" %>, <%= p.Rush_TD %> TD</td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.YPC || 0), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.EPA_per_Play), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.EPA), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.SR) * 100, 2, 0) %>%</td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.WPA) * 100, 2, 1) %>%</td>
                                                    </tr>
                                                <% } %>
                                            <% }); %>
                                        <% } %>
                                        <% if (homeTeamBox.receiver.length > 0) { %>
                                            <tr>
                                                <td colspan="8" class="gt_group_heading" style="color: black; font-weight: bold;">Pass targets</td>
                                            </tr>
                                            <% homeTeamBox.receiver.forEach(p => { %>
                                                <% if (p.receiver_player_name.length > 0) { %>
                                                    <tr>
                                                        <td style="text-align: left;"><%= p.receiver_player_name %></td>
                                                        <td style="text-align: left;"><%= p.Rec %> catch<%= (parseInt(p.Rec) == 1) ? "" : "es" %> (<%= p.Tar %> target<%= (parseInt(p.Tar) == 1) ? "" : "s" %>), <%= p.Yds %> yd<%= (Math.abs(parseFloat(p.Yds)) == 1) ? "" : "s" %>, <%= p.Rec_TD %> TD</td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.YPT || 0), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.EPA_per_Play), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.EPA), 2, 2) %></td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.SR) * 100, 2, 0) %>%</td>
                                                        <td class="numeral" style="text-align: center;"><%= roundNumber(parseFloat(p.WPA) * 100, 2, 1) %>%</td>
                                                    </tr>
                                                <% } %>
                                            <% }); %>
                                        <% } %>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                          </div>
                        </div>
                    </div>
                </div>
            </div>
        <% } %>
        <%
            var bigPlays = [...gameData.plays]
            bigPlays.sort((a, b) => {
                var diff = Math.abs(a.expectedPoints.added) - Math.abs(b.expectedPoints.added)
                if (diff < 0) {
                    return 1
                } else if (diff > 0) {
                    return -1
                } else {
                    return 0
                }
            })
            bigPlays = bigPlays.slice(0, 10)
            var mostImpPlays = [...gameData.plays]
            mostImpPlays.sort((a, b) => {
                var diff = Math.abs(a.winProbability.added) - Math.abs(b.winProbability.added)
                if (diff < 0) {
                    return 1
                } else if (diff > 0) {
                    return -1
                } else {
                    return 0
                }
            })
            mostImpPlays = mostImpPlays.slice(0, 10)
        %>
        <div class="row mb-3">
            <div class="col-lg-6 ms-sm-auto px-md-4" id="big-plays">
                <div>
                    <h2>Big Plays</h2>
                    <p class="text-small">As determined by absolute EPA.</p>
                </div>
                <div class="table-responsive">
                    <%- buildPlayTable(bigPlays, "big-play", true, "No big plays listed for this game.", false); %>
                </div>
                
            </div>
            <div class="col-lg-6 ms-sm-auto px-md-4" id="most-imp-plays">
                <div>
                    <h2>Most Important Plays</h2>
                    <p class="text-small">As determined by absolute WPA.</p>
                </div>
                <div class="table-responsive">
                    <%- buildPlayTable(mostImpPlays, "most-imp-play", true, "No important plays listed for this game.", false); %>
                </div>
            </div>
        </div>
        
        <div class="row mb-3">
            <main class="col-md-12 ms-sm-auto col-lg-12 px-md-4">
                <h2 id="scoring-plays">Scoring Plays</h2>
                <div class="table-responsive">
                    <%- buildPlayTable(gameData.scoringPlays, "scoring-play", true, "No scoring plays in this game.", false); %>
                </div>
            </main>
        </div>
        <div class="row mb-3">
            <main class="col-md-12 ms-sm-auto col-lg-12 px-md-4">
                <%  
                    var gamePlays = [...gameData.plays] 
                    var subTitle = ""
                    if (gameData.gameInfo.status.type.completed != true) {
                        subTitle = '<p class="text-small">Most recent plays first.</p>';
                        gamePlays.reverse()
                    }
                %>
                <div>
                    <h2 id="all-plays">All Plays</h2>
                    <%- subTitle %>
                </div>
                <div class="table-responsive">
                    <%- buildPlayTable(gamePlays, "all", true, "No plays in this game.", true); %>
                </div>
                <!-- <p id="content"></p> -->
            </main>
        </div>
    </div>
    <%- include('../../partials/footer') %>
    <%- include('../../partials/scripts') %>        
    <script src="/assets/js/feather.min.js" crossorigin="anonymous"></script>
    <script src="/assets/js/Chart.min.js" crossorigin="anonymous"></script>
    <script>
        const DateTime = luxon.DateTime;
        var gameData = <%- JSON.stringify(gameData) %>;
        // document.body.querySelector("#content").innerHTML = "<pre>" + JSON.stringify(gameData.plays, null, 2) +  "</pre>";
        var statusDetail = gameData.gameInfo.status.type.detail;
        if (gameData.gameInfo.status.type.completed == true || statusDetail.includes("Cancel") || statusDetail.includes("Postpone")) {
            document.body.querySelector("#game-date").innerText = statusDetail + " - " + DateTime.fromISO(gameData.gameInfo.date).toLocaleString(DateTime.DATETIME_FULL);
        } else {
            var airings = gameData.gameInfo.airings;
            var airingLink = (airings != null && airings.length > 0) ? airings[0].webAiringLink : null
            if (airingLink != null) {
                document.body.querySelector("#game-date").innerHTML = "<a href=" + airingLink + ">LIVE</a> - " + statusDetail
            } else {
                document.body.querySelector("#game-date").innerText = "LIVE - " + statusDetail
            }
        }
    </script>
    </script>
    <script src="/assets/js/dashboard.js"></script>
</body>
</html>